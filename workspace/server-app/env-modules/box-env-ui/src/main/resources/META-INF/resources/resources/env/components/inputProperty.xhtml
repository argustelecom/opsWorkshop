<ui:component xmlns="http://www.w3.org/1999/xhtml"
			  xmlns:ui="http://java.sun.com/jsf/facelets"
			  xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions"
			  xmlns:o="http://omnifaces.org/ui"
			  xmlns:f="http://java.sun.com/jsf/core" xmlns:boxenv="http://argustelecom.ru/box/env"
			  xmlns:cc="http://java.sun.com/jsf/composite">

	<cc:interface componentType="inputProperty">
		<cc:attribute name="id"/>
		<cc:attribute name="accessor" type="ru.argustelecom.box.env.type.model.TypePropertyAccessor" required="true"/>
		<cc:attribute name="required" type="Boolean"/>
	</cc:interface>

	<cc:implementation>
		<o:importConstants type="ru.argustelecom.box.env.type.model.TypePropertyRef" var="TypePropertyRef"/>

		<pe:switch value="#{cc.attrs.accessor.property.type}">

			<!-- DateProperty -->
			<pe:case value="#{TypePropertyRef.DATE}">
				<p:calendar id="#{cc.attrs.id}"
							value="#{cc.attrs.accessor.value}"
							required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
							pattern="#{cc.attrs.accessor.property.pattern}"
							locale="#{languageBean.locale}"/>
			</pe:case>

			<!-- DateIntervalProperty -->
			<pe:case value="#{TypePropertyRef.DATE_INTERVAL}">
				<boxenv:inputDateIntervalValue id="#{cc.attrs.id}"
											   value="#{cc.attrs.accessor.value}"
											   required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
											   pattern="#{cc.attrs.accessor.property.pattern}"/>
			</pe:case>

			<!-- LogicalProperty -->
			<pe:case value="#{TypePropertyRef.LOGICAL}">
				<p:selectBooleanCheckbox id="#{cc.attrs.id}"
										 value="#{cc.attrs.accessor.value}"
										 required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"/>
			</pe:case>

			<!-- DoubleProperty -->
			<pe:case value="#{TypePropertyRef.DOUBLE}">
				<p:inputText id="#{cc.attrs.id}"
							 value="#{cc.attrs.accessor.value}"
							 required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
							 validator="#{typePropertyValuePm.validate}">

					<f:converter converterId="ru.argustelecom.box.inf.converter.DynamicDoubleNumberConverter"/>
					<f:validator validatorId="ru.argustelecom.box.inf.validator.type.RangeAndScaleValidator"/>
					<f:attribute name="minimum" value="#{cc.attrs.accessor.property.minValue}"/>
					<f:attribute name="maximum" value="#{cc.attrs.accessor.property.maxValue}"/>
					<f:attribute name="precision" value="#{cc.attrs.accessor.property.precision}"/>
					<f:attribute name="accessor" value="#{cc.attrs.accessor}"/>
				</p:inputText>
			</pe:case>

			<!-- LongProperty -->
			<pe:case value="#{TypePropertyRef.LONG}">
				<p:inputText id="#{cc.attrs.id}"
							 value="#{cc.attrs.accessor.value}"
							 required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
							 validator="#{typePropertyValuePm.validate}"
							 converterMessage="#{typeBundle['box.type.property.number.conv_msg']}">

					<f:converter converterId="javax.faces.Long"/>
					<f:validator validatorId="ru.argustelecom.box.env.type.DynamicLongRangeValidator"/>
					<f:attribute name="minimum" value="#{cc.attrs.accessor.property.minValue}"/>
					<f:attribute name="maximum" value="#{cc.attrs.accessor.property.maxValue}"/>
					<f:attribute name="accessor" value="#{cc.attrs.accessor}"/>
				</p:inputText>
			</pe:case>

			<!-- LookupProperty -->
			<pe:case value="#{TypePropertyRef.LOOKUP}">
				<p:selectOneMenu id="#{cc.attrs.id}"
								 value="#{cc.attrs.accessor.value}"
								 required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
								 converter="SerializeObjectConverter">

					<f:selectItem itemLabel="#{overallBundle['box.overall.empty']}" itemValue="#{null}"/>
					<f:selectItems var="entry" itemValue="#{entry}" itemLabel="#{entry.objectName}"
								   value="#{cc.attrs.accessor.possibleLookupValues}"/>
				</p:selectOneMenu>
			</pe:case>

			<!-- TextProperty -->
			<pe:case value="#{TypePropertyRef.TEXT}">
				<p:inputText id="#{cc.attrs.id}"
							 value="#{cc.attrs.accessor.value}"
							 required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
							 validator="#{typePropertyValuePm.validate}"
							 converter="stringTrimConverter"
							 rendered="#{not accessor.property.multiline}"
							 label="#{typeBundle['box.type.property.text']}">
					<f:attribute name="accessor" value="#{accessor}"/>
				</p:inputText>
				<p:inputTextarea id="ml_#{cc.attrs.id}"
								 value="#{cc.attrs.accessor.value}"
								 required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
								 rendered="#{cc.attrs.accessor.property.multiline}"
								 rows="#{cc.attrs.accessor.property.linesCount}"
								 styleClass="width-100-percents"
								 converter="stringTrimConverter"
								 maxlength="1024" autoResize="false"/>
			</pe:case>

			<!-- MeasuredProperty -->
			<pe:case value="#{TypePropertyRef.MEASURED}">
				<boxenv:inputMeasuredValue id="#{cc.attrs.id}"
										   value="#{cc.attrs.accessor.value}"
										   requiredForChild="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
										   defaultMeasure="#{cc.attrs.accessor.property.measureUnit}"/>
			</pe:case>

			<!-- MeasuredIntervalProperty -->
			<pe:case value="#{TypePropertyRef.MEASURED_INTERVAL}">
				<boxenv:inputMeasuredIntervalValue id="#{cc.attrs.id}"
												   value="#{cc.attrs.accessor.value}"
												   required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
												   defaultMeasure="#{cc.attrs.accessor.property.measureUnit}"/>
			</pe:case>

			<pe:case value="#{TypePropertyRef.LOOKUP_ARRAY}">
				<boxenv:inputLookupArray id="#{cc.attrs.id}"
										 value="#{cc.attrs.accessor.value}"
										 required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"
										 items="#{cc.attrs.accessor.property.category.getPossibleValues(null)}"/>
			</pe:case>

			<pe:case value="#{TypePropertyRef.TEXT_ARRAY}">
				<boxenv:inputTextArray id="#{cc.attrs.id}"
									   styleClass="width-97-percents"
									   value="#{cc.attrs.accessor.value}"
									   required="#{cc.attrs.required ne null ? cc.attrs.required : cc.attrs.accessor.property.required}"/>
			</pe:case>

			<!-- DefaultEditor -->
			<pe:defaultCase>
				<p:inputText value="#{cc.attrs.accessor.asString}" styleClass="width-100-percents"/>
			</pe:defaultCase>
		</pe:switch>
	</cc:implementation>
</ui:component>