<?xml version="1.0" encoding="UTF-8"?>
<!--
	JBIDE ругается на вычисляемые значения в optional, причем еррорами.
	Создал https://issues.apache.org/jira/browse/MNG-5864, т.к. похоже на ошибку в схеме.
	Убрал здесь схему, тогда есть просто ворнинг про отсутствие схемы. И нет валидации само собой.
-->
<project>
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ru.argustelecom.ops</groupId>
		<artifactId>parent</artifactId>
		<version>0.1.0</version>
		<relativePath>../../../parent/pom.xml</relativePath>
	</parent>

	<artifactId>webui</artifactId>
	<packaging>war</packaging>
	<name>webui</name>

	<properties>
		<main.basedir>${project.parent.basedir}/..</main.basedir>
	</properties>

	<dependencies>
		<!-- для ru.argustelecom.system.inf.application.WebAppCtxProviderWebUI -->
		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-servlet</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- ################################# -->
		<!-- НАЧАЛО вебфрагментов (project-ui) -->
		<!-- ################################# -->
		<dependency>
			<groupId>ru.argustelecom.ops</groupId>
			<artifactId>ops-inf-ui</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>ru.argustelecom.ops</groupId>
			<artifactId>ops-env-ui</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- ################################ -->
		<!-- КОНЕЦ вебфрагментов (project-ui) -->
		<!-- ################################ -->
	</dependencies>

	<build>
		<resources>
			<resource>                        
				<directory>src/main/resources</directory>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<!-- before-ui-tests-build-add-ear - профиль, используемый для выполнения билда интеграционных тестов UI на сервере CI. Содержит плагин, 
				добавляющий собраную ear-ку в каталог деплойментов сервера приложейний (считается, что ear уже собрана в argus-enterprise/target) 
				и прогоном тестов. Используется только в test-helper.bat, при сборке ui-tests в teamcity его не используем. -->
			<id>before-ui-tests-build-add-ear</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- закидываем наш ear на сервер -->
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-ear-before-integration-tests</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ops-enterprise</artifactId>
											<overWrite>true</overWrite>
											<version>${project.version}</version>
											<outputDirectory>${INSTALL_PATH}/standalone/deployments</outputDirectory>
											<type>ear</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- TASK-86264, v.semchenko: потребовалось разделение исходных профилей before-ui-tests-build и after-ui-tests-build на несколько профилей, отвечающих за конкретные задачи. -->
			<!-- before-ui-tests-build-start-appserver - профиль, используемый для выполнения билда интеграционных тестов UI на сервере CI. Содержит плагины, обеспечивающие запуск сервера.
				Не запускает сами тесты, а также не делает завершающие билд операции (это в отдельных профилях ui-tests(см. ui-parent) и after-ui-tests-build. -->
			<id>before-ui-tests-build-start-appserver</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- стартуем сервер -->
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-server-before-integration-tests</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<jbossHome>${INSTALL_PATH}</jbossHome>
							<port>${management.port}</port>
							<hostname>${jboss.bind.address}</hostname>
							<!-- при дефолтных значениях памяти недостаточно, чтобы успешно стартануть нашу ear -->
							<jvmArgs>-Xms2048m -Xmx4096m 
								-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8
								-Dsun.lang.ClassLoader.allowArraySyntax=true
								-Djava.net.preferIPv4Stack=true</jvmArgs>
							<startupTimeout>300</startupTimeout>
							<!-- kostd, TASK-91307: лог сервера не должен попадать в консоль (иначе слишком 
							большой билдлог ci). Сохраним в файлик, который можно как выбросить, так и 
							забрать в артефакты, если почему-то обычного server.log недостаточно -->
							<stdout>${project.build.directory}/wildfly-log.log</stdout>
							<username>${argus.app.admin.user}</username>
							<password>${argus.app.admin.pass}</password>
						</configuration>
					</plugin>
					<!-- wildfly-maven-plugin, стартующий jboss, возвращает управление сразу 
						же, не дожидаясь, пока развернутся наши деплойменты(по крайней мере, так было раньше). Здесь наша задача подождать, 
						пока все задеплоится, и только после этого переходить к тестам. -->
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<executions>
							<execution>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- after-ui-tests-build-stop-appserver - профиль, используемый для выполнения билда интеграционных тестов UI на сервере CI. Содержит плагины выполняющий остановку сервера. 
				Все действия after-ui-tests-build-stop-server и after-ui-tests-build-clean-deployments на фазе initialize, так как завершительные операции надо делать 
				отдельным мавен-билдом, а тогда уж проще указать фазу поменьше, чтобы лишнего не делать. -->
			<id>after-ui-tests-build-stop-appserver</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- останавливаем сервер -->
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<executions>
							<!-- предыдущие версии wildfly-maven-plugin делали start так, что сервер сам останавливался, когда завершался порождающий start мавен-процесс.
								Но теперь это не так, останавливаем явно сами. -->
							<execution>
								<id>stop-server-after-integration-tests</id>
								<phase>initialize</phase>
								<goals>
									<goal>shutdown</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<jbossHome>${INSTALL_PATH}</jbossHome>
							<port>${management.port}</port>
							<hostname>${jboss.bind.address}</hostname>
							<!-- при дефолтных значениях памяти недостаточно, чтобы успешно стартануть нашу ear -->
							<jvmArgs>-Xms2048m -Xmx4096m 
								-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8
								-Dsun.lang.ClassLoader.allowArraySyntax=true
								-Djava.net.preferIPv4Stack=true</jvmArgs>
							<startupTimeout>300</startupTimeout>
							<!-- kostd, TASK-91307: лог сервера не должен попадать в консоль (иначе слишком 
							большой билдлог ci). Сохраним в файлик, который можно как выбросить, так и 
							забрать в артефакты, если почему-то обычного server.log недостаточно -->
							<stdout>${project.build.directory}/wildfly-log.log</stdout>
							<username>${argus.app.admin.user}</username>
							<password>${argus.app.admin.pass}</password>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- after-ui-tests-build-clean-deployments - профиль, используемый для выполнения билда интеграционных тестов UI на сервере CI. Содержит плагин 
				выполняющий очистку каталога деплойментов после прогона всех тестов. Выделен в отдельный профиль так как используется только в test-helper.bat, 
				при сборке ui-tests в teamcity его не используем. -->
			<id>after-ui-tests-build-clean-deployments</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- после прогона всех тестов и остановки сервера очистим каталог деплойментов,
						чтобы вернуть все к исходному состоянию -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<executions>
							<execution>
								<id>clean-after-its</id>
								<phase>initialize</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>${INSTALL_PATH}/standalone/deployments</directory>
											<includes>
												<include>**/*</include>
											</includes>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- prepare-list-ui-modules - профиль, используемый для выполнения билда интеграционных тестов UI на сервере CI. Содержит плагин 
				выполняющий получение значений параметров из профиля заказчика. Выделен в отдельный профиль так как используется только в сборке ui-tests в teamcity и gitlab ci. -->
			<id>prepare-list-ui-modules</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- Результат работы записывается во временный файл target/tmpListModules.txt -->
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<executions>
							<execution>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
